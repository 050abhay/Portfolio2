{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Documents\\\\BTech\\\\Internship\\\\ABESIT\\\\DailyWork\\\\my-app\\\\src\\\\Component_Day18\\\\MyToDoVersion2\\\\Todolist.js\";\n// import React, { useState, useEffect } from \"react\";\n// import Tododisplay from \"./Tododisplay\";\n\n// export default function Todolist({ todoItems, setTodoItems }) {\n//   const [hasLoaded, setHasLoaded] = useState(false);\n\n//   const handleToggleCompletion = (itemId) => {\n//     setTodoItems(\n//       todoItems.map((obj) => {\n//         if (obj.id === itemId) {\n//           return { ...obj, completed: !obj.completed };\n//         }\n//         return obj;\n//       })\n//     );\n//   };\n\n//   const handleDelete = (itemId) => {\n//     setTodoItems(todoItems.filter((obj) => obj.id !== itemId));\n//   };\n\n//   useEffect(() => {\n//     setHasLoaded(true);\n//   }, []);\n\n//   return (\n//     <div>\n//       {hasLoaded &&\n//         (todoItems.length > 0 ? (\n//           todoItems.map((item) => (\n//             <Tododisplay\n//               key={item.id}\n//               item={item}\n//               handleToggleCompletion={() => handleToggleCompletion(item.id)}\n//               handleDelete={() => handleDelete(item.id)}\n//             />\n//           ))\n//         ) : (\n//           <div className=\"text-center mt-3\">No tasks to do today.</div>\n//         ))}\n//     </div>\n//   );\n// }\n\n// import React, { useState, useEffect } from \"react\";\n// import Tododisplay from \"./Tododisplay\";\n\n// export default function Todolist({ todoItems, setTodoItems }) {\n//   const [loading, setLoading] = useState(true);\n\n//   const handleToggleCompletion = (itemId) => {\n//     setTodoItems(\n//       todoItems.map((obj) => {\n//         if (obj.id === itemId) {\n//           return { ...obj, completed: !obj.completed };\n//         }\n//         return obj;\n//       })\n//     );\n//   };\n\n//   const handleDelete = (itemId) => {\n//     setTodoItems(todoItems.filter((obj) => obj.id !== itemId));\n//   };\n\n//   useEffect(() => {\n//     setLoading(false);\n//   }, []);\n\n//   return (\n//     <div>\n//       {loading ? null : todoItems.length > 0 ? (\n//         todoItems.map((item) => (\n//           <Tododisplay\n//             key={item.id}\n//             item={item}\n//             handleToggleCompletion={() => handleToggleCompletion(item.id)}\n//             handleDelete={() => handleDelete(item.id)}\n//           />\n//         ))\n//       ) : (\n//         <div className=\"text-center mt-3\">No tasks to do today.</div>\n//       )}\n//     </div>\n//   );\n// }\n\n// import React from \"react\";\n// import Tododisplay from \"./Tododisplay\";\n\n// export default function Todolist({ todoItems, setTodoItems, hasLoaded }) {\n//   const handleToggleCompletion = (itemId) => {\n//     setTodoItems(\n//       todoItems.map((obj) => {\n//         if (obj.id === itemId) {\n//           return { ...obj, completed: !obj.completed };\n//         }\n//         return obj;\n//       })\n//     );\n//   };\n\n//   const handleDelete = (itemId) => {\n//     setTodoItems(todoItems.filter((obj) => obj.id !== itemId));\n//   };\n\n//   return (\n//     <div>\n//       {hasLoaded &&\n//         (todoItems.length > 0 ? (\n//           todoItems.map((item) => (\n//             <Tododisplay\n//               key={item.id}\n//               item={item}\n//               handleToggleCompletion={() => handleToggleCompletion(item.id)}\n//               handleDelete={() => handleDelete(item.id)}\n//             />\n//           ))\n//         ) : (\n//           <div className=\"text-center mt-3\">No tasks to do today.</div>\n//         ))}\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import Todoform from \"./Todoform\";\n// import Todolist from \"./Todolist\";\n\n// export default function Viewtodo() {\n//   const [todoItem, setTodoItem] = useState({\n//     name: \"\",\n//     dueDate: \"\",\n//     category: \"\",\n//   });\n//   const [todoItems, setTodoItems] = useState([]);\n\n//   const completedTasks = todoItems.filter((item) => item.completed).length;\n//   const remainingTasks = todoItems.filter((item) => !item.completed).length;\n//   const noTasksMessage = \"No tasks to do today.\";\n//   const allTasksCompletedMessage = \"All tasks completed!\";\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <div className=\"row justify-content-center\">\n//         <div className=\"col-md-6\">\n//           <div className=\"card shadow\">\n//             <div className=\"card-body\">\n//               <h3 className=\"card-title text-center mb-4\">Todo App</h3>\n//               <Todoform\n//                 todoItem={todoItem}\n//                 setTodoItem={setTodoItem}\n//                 todoItems={todoItems}\n//                 setTodoItems={setTodoItems}\n//               />\n//               <Todolist todoItems={todoItems} setTodoItems={setTodoItems} />\n//               <div className=\"text-center mt-3\">\n//                 {todoItems.length === 0\n//                   ? noTasksMessage\n//                   : completedTasks === 0\n//                   ? \"No tasks completed yet.\"\n//                   : completedTasks === todoItems.length\n//                   ? allTasksCompletedMessage\n//                   : `${completedTasks} task${\n//                       completedTasks === 1 ? \"\" : \"s\"\n//                     } completed.`}\n//                 <br />\n//                 {todoItems.length === 0\n//                   ? \"\"\n//                   : remainingTasks === 0 && completedTasks !== todoItems.length\n//                   ? allTasksCompletedMessage\n//                   : `${remainingTasks} task${\n//                       remainingTasks === 1 ? \"\" : \"s\"\n//                     } remaining.`}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React from \"react\";\nimport Tododisplay from \"./Tododisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todolist({\n  todoItems,\n  setTodoItems\n}) {\n  const handleToggleCompletion = itemId => {\n    setTodoItems(todoItems.map(obj => {\n      if (obj.id === itemId) {\n        return {\n          ...obj,\n          completed: !obj.completed\n        };\n      }\n      return obj;\n    }));\n  };\n  const handleDelete = itemId => {\n    setTodoItems(todoItems.filter(obj => obj.id !== itemId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: todoItems.map(item => /*#__PURE__*/_jsxDEV(Tododisplay, {\n      item: item,\n      handleToggleCompletion: () => handleToggleCompletion(item.id),\n      handleDelete: () => handleDelete(item.id)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","Tododisplay","jsxDEV","_jsxDEV","Todolist","todoItems","setTodoItems","handleToggleCompletion","itemId","map","obj","id","completed","handleDelete","filter","children","item","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Documents/BTech/Internship/ABESIT/DailyWork/my-app/src/Component_Day18/MyToDoVersion2/Todolist.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Tododisplay from \"./Tododisplay\";\r\n\r\n// export default function Todolist({ todoItems, setTodoItems }) {\r\n//   const [hasLoaded, setHasLoaded] = useState(false);\r\n\r\n//   const handleToggleCompletion = (itemId) => {\r\n//     setTodoItems(\r\n//       todoItems.map((obj) => {\r\n//         if (obj.id === itemId) {\r\n//           return { ...obj, completed: !obj.completed };\r\n//         }\r\n//         return obj;\r\n//       })\r\n//     );\r\n//   };\r\n\r\n//   const handleDelete = (itemId) => {\r\n//     setTodoItems(todoItems.filter((obj) => obj.id !== itemId));\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     setHasLoaded(true);\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       {hasLoaded &&\r\n//         (todoItems.length > 0 ? (\r\n//           todoItems.map((item) => (\r\n//             <Tododisplay\r\n//               key={item.id}\r\n//               item={item}\r\n//               handleToggleCompletion={() => handleToggleCompletion(item.id)}\r\n//               handleDelete={() => handleDelete(item.id)}\r\n//             />\r\n//           ))\r\n//         ) : (\r\n//           <div className=\"text-center mt-3\">No tasks to do today.</div>\r\n//         ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import Tododisplay from \"./Tododisplay\";\r\n\r\n// export default function Todolist({ todoItems, setTodoItems }) {\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   const handleToggleCompletion = (itemId) => {\r\n//     setTodoItems(\r\n//       todoItems.map((obj) => {\r\n//         if (obj.id === itemId) {\r\n//           return { ...obj, completed: !obj.completed };\r\n//         }\r\n//         return obj;\r\n//       })\r\n//     );\r\n//   };\r\n\r\n//   const handleDelete = (itemId) => {\r\n//     setTodoItems(todoItems.filter((obj) => obj.id !== itemId));\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     setLoading(false);\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       {loading ? null : todoItems.length > 0 ? (\r\n//         todoItems.map((item) => (\r\n//           <Tododisplay\r\n//             key={item.id}\r\n//             item={item}\r\n//             handleToggleCompletion={() => handleToggleCompletion(item.id)}\r\n//             handleDelete={() => handleDelete(item.id)}\r\n//           />\r\n//         ))\r\n//       ) : (\r\n//         <div className=\"text-center mt-3\">No tasks to do today.</div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// import React from \"react\";\r\n// import Tododisplay from \"./Tododisplay\";\r\n\r\n// export default function Todolist({ todoItems, setTodoItems, hasLoaded }) {\r\n//   const handleToggleCompletion = (itemId) => {\r\n//     setTodoItems(\r\n//       todoItems.map((obj) => {\r\n//         if (obj.id === itemId) {\r\n//           return { ...obj, completed: !obj.completed };\r\n//         }\r\n//         return obj;\r\n//       })\r\n//     );\r\n//   };\r\n\r\n//   const handleDelete = (itemId) => {\r\n//     setTodoItems(todoItems.filter((obj) => obj.id !== itemId));\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {hasLoaded &&\r\n//         (todoItems.length > 0 ? (\r\n//           todoItems.map((item) => (\r\n//             <Tododisplay\r\n//               key={item.id}\r\n//               item={item}\r\n//               handleToggleCompletion={() => handleToggleCompletion(item.id)}\r\n//               handleDelete={() => handleDelete(item.id)}\r\n//             />\r\n//           ))\r\n//         ) : (\r\n//           <div className=\"text-center mt-3\">No tasks to do today.</div>\r\n//         ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// import React, { useState } from \"react\";\r\n// import Todoform from \"./Todoform\";\r\n// import Todolist from \"./Todolist\";\r\n\r\n// export default function Viewtodo() {\r\n//   const [todoItem, setTodoItem] = useState({\r\n//     name: \"\",\r\n//     dueDate: \"\",\r\n//     category: \"\",\r\n//   });\r\n//   const [todoItems, setTodoItems] = useState([]);\r\n\r\n//   const completedTasks = todoItems.filter((item) => item.completed).length;\r\n//   const remainingTasks = todoItems.filter((item) => !item.completed).length;\r\n//   const noTasksMessage = \"No tasks to do today.\";\r\n//   const allTasksCompletedMessage = \"All tasks completed!\";\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <div className=\"row justify-content-center\">\r\n//         <div className=\"col-md-6\">\r\n//           <div className=\"card shadow\">\r\n//             <div className=\"card-body\">\r\n//               <h3 className=\"card-title text-center mb-4\">Todo App</h3>\r\n//               <Todoform\r\n//                 todoItem={todoItem}\r\n//                 setTodoItem={setTodoItem}\r\n//                 todoItems={todoItems}\r\n//                 setTodoItems={setTodoItems}\r\n//               />\r\n//               <Todolist todoItems={todoItems} setTodoItems={setTodoItems} />\r\n//               <div className=\"text-center mt-3\">\r\n//                 {todoItems.length === 0\r\n//                   ? noTasksMessage\r\n//                   : completedTasks === 0\r\n//                   ? \"No tasks completed yet.\"\r\n//                   : completedTasks === todoItems.length\r\n//                   ? allTasksCompletedMessage\r\n//                   : `${completedTasks} task${\r\n//                       completedTasks === 1 ? \"\" : \"s\"\r\n//                     } completed.`}\r\n//                 <br />\r\n//                 {todoItems.length === 0\r\n//                   ? \"\"\r\n//                   : remainingTasks === 0 && completedTasks !== todoItems.length\r\n//                   ? allTasksCompletedMessage\r\n//                   : `${remainingTasks} task${\r\n//                       remainingTasks === 1 ? \"\" : \"s\"\r\n//                     } remaining.`}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nimport React from \"react\";\r\nimport Tododisplay from \"./Tododisplay\";\r\n\r\nexport default function Todolist({ todoItems, setTodoItems }) {\r\n  const handleToggleCompletion = (itemId) => {\r\n    setTodoItems(\r\n      todoItems.map((obj) => {\r\n        if (obj.id === itemId) {\r\n          return { ...obj, completed: !obj.completed };\r\n        }\r\n        return obj;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDelete = (itemId) => {\r\n    setTodoItems(todoItems.filter((obj) => obj.id !== itemId));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {todoItems.map((item) => (\r\n        <Tododisplay\r\n          key={item.id}\r\n          item={item}\r\n          handleToggleCompletion={() => handleToggleCompletion(item.id)}\r\n          handleDelete={() => handleDelete(item.id)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,QAAQA,CAAC;EAAEC,SAAS;EAAEC;AAAa,CAAC,EAAE;EAC5D,MAAMC,sBAAsB,GAAIC,MAAM,IAAK;IACzCF,YAAY,CACVD,SAAS,CAACI,GAAG,CAAEC,GAAG,IAAK;MACrB,IAAIA,GAAG,CAACC,EAAE,KAAKH,MAAM,EAAE;QACrB,OAAO;UAAE,GAAGE,GAAG;UAAEE,SAAS,EAAE,CAACF,GAAG,CAACE;QAAU,CAAC;MAC9C;MACA,OAAOF,GAAG;IACZ,CAAC,CACH,CAAC;EACH,CAAC;EAED,MAAMG,YAAY,GAAIL,MAAM,IAAK;IAC/BF,YAAY,CAACD,SAAS,CAACS,MAAM,CAAEJ,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKH,MAAM,CAAC,CAAC;EAC5D,CAAC;EAED,oBACEL,OAAA;IAAAY,QAAA,EACGV,SAAS,CAACI,GAAG,CAAEO,IAAI,iBAClBb,OAAA,CAACF,WAAW;MAEVe,IAAI,EAAEA,IAAK;MACXT,sBAAsB,EAAEA,CAAA,KAAMA,sBAAsB,CAACS,IAAI,CAACL,EAAE,CAAE;MAC9DE,YAAY,EAAEA,CAAA,KAAMA,YAAY,CAACG,IAAI,CAACL,EAAE;IAAE,GAHrCK,IAAI,CAACL,EAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GA5BuBjB,QAAQ;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}